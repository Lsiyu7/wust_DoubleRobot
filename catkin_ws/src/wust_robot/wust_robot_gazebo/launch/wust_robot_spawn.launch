<launch>
  <arg name="robot_name" default="wust_robot"/>
  <arg name="debug" default="false" />
<!-- send robot urdf to param server -->
  <include file="$(find wust_robot_description)/launch/wust_robot_gazebo_upload.launch"/>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <!-- (Load hardware interface sim) Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"  args="-urdf -model $(arg robot_name) -param robot_description"/>

  <!-- merge joint states and publish as /joint_states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <param name="rate" value="50" />z
    <rosparam param="source_list">[wust_robot/joint_states]</rosparam>
  </node>

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <!--<remap from="/joint_states" to="/mrp2a/joint_states" />-->
  </node>

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />

  <!-- Load controller-->
  <group ns="$(arg robot_name)">
    <rosparam file="$(find wust_robot_gazebo)/controller/joint_state_controller.yaml" command="load"/>
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner"
          args="joint_state_controller" respawn="false" output="screen"/>
    <rosparam file="$(find wust_robot_gazebo)/controller/left_arm_and_gripper_controller.yaml" command="load"/>
    <node name="left_arm_controller_spawner" pkg="controller_manager" type="spawner"
          args="left_arm_controller left_gripper_controller" respawn="false" output="screen"/>
    <rosparam file="$(find wust_robot_gazebo)/controller/right_arm_and_gripper_controller.yaml" command="load"/>
    <node name="right_arm_controller_spawner" pkg="controller_manager" type="spawner"
          args="right_arm_controller right_gripper_controller" respawn="false" output="screen"/>
    <rosparam file="$(find wust_robot_gazebo)/controller/head_controller.yaml" command="load"/>
    <node name="head_controller_spawner" pkg="controller_manager" type="spawner"
          args="head_controller" respawn="false" output="screen"/>
  </group>

  <!--Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default)-->
  <include file="$(find wust_robot_moveit_config)/launch/move_group.launch">
    <arg name="debug" value="$(arg debug)"/>

  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find wust_robot_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>


</launch>
